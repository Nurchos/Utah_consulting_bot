from aiogram import Router, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.filters import Command

router = Router()

# –ü—Ä–æ–±–ª–µ–º—ã –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
PROBLEM_INSTRUCTIONS = {
    "no_sound": "üîá –ï—Å–ª–∏ –Ω–µ—Ç –∑–≤—É–∫–∞:\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å.\n2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—É—à–Ω–∏–∫–∏.",
    "no_connection": "üì∂ –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:\n1. –í–∫–ª—é—á–∏—Ç–µ Wi-Fi –∏–ª–∏ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\n2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–æ—É—Ç–µ—Ä.",
    "app_crash": "üí• –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ª–µ—Ç–∞–µ—Ç:\n1. –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n2. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à.\n3. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
}


# –ö–æ–º–∞–Ω–¥–∞ /instructions –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
@router.message(Command("instructions"))
async def show_problem_buttons(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üîá –ù–µ—Ç –∑–≤—É–∫–∞", callback_data="no_sound")],
            [InlineKeyboardButton(text="üì∂ –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", callback_data="no_connection")],
            [InlineKeyboardButton(text="üí• –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ª–µ—Ç–∞–µ—Ç", callback_data="app_crash")],
        ]
    )
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å:", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@router.callback_query()
async def handle_problem_selection(callback: CallbackQuery):
    instruction = PROBLEM_INSTRUCTIONS.get(callback.data)
    if instruction:
        await callback.message.edit_text(instruction)
    else:
        await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
