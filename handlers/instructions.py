from aiogram import Router, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram.filters import Command
from user_preferences import get_user_language

router = Router()

# –õ–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
PROBLEM_INSTRUCTIONS = {
    "no_sound": {
        "ru": "üîá –ï—Å–ª–∏ –Ω–µ—Ç –∑–≤—É–∫–∞:\n1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å.\n2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.\n3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—É—à–Ω–∏–∫–∏.",
        "en": "üîá No sound:\n1. Check the volume.\n2. Restart the device.\n3. Check your headphones.",
        "ky": "üîá “Æ–Ω –∂–æ–∫ –±–æ–ª—Å–æ:\n1. “Æ–Ω –¥–µ“£–≥—ç—ç–ª–∏–Ω —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑.\n2. –ê–ø–ø–∞—Ä–∞—Ç—ã“£—ã–∑–¥—ã ”©—á“Ø—Ä“Ø–ø –∫“Ø–π–≥“Ø–∑“Ø“£“Ø–∑.\n3. –ù–∞—É—à–Ω–∏–≥–∏“£–∏–∑–¥–∏ —Ç–µ–∫—à–µ—Ä–∏“£–∏–∑.",
        "es": "üîá Sin sonido:\n1. Verifica el volumen.\n2. Reinicia el dispositivo.\n3. Revisa tus auriculares.",
    },
    "no_connection": {
        "ru": "üì∂ –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:\n1. –í–∫–ª—é—á–∏—Ç–µ Wi-Fi –∏–ª–∏ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\n2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–æ—É—Ç–µ—Ä.",
        "en": "üì∂ No connection:\n1. Turn on Wi-Fi or mobile data.\n2. Restart your router.",
        "ky": "üì∂ –ë–∞–π–ª–∞–Ω—ã—à –∂–æ–∫ –±–æ–ª—Å–æ:\n1. Wi-Fi –∂–µ –º–æ–±–∏–ª–¥–∏–∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—Ç–∏ –∫“Ø–π–≥“Ø–∑“Ø“£“Ø–∑.\n2. –†–æ—É—Ç–µ—Ä–¥–∏ ”©—á“Ø—Ä“Ø–ø –∫“Ø–π–≥“Ø–∑“Ø“£“Ø–∑.",
        "es": "üì∂ Sin conexi√≥n:\n1. Activa Wi-Fi o datos m√≥viles.\n2. Reinicia el router.",
    },
    "app_crash": {
        "ru": "üí• –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ª–µ—Ç–∞–µ—Ç:\n1. –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n2. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à.\n3. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
        "en": "üí• App crashes:\n1. Update the app.\n2. Clear the cache.\n3. Reinstall the app.",
        "ky": "üí• –≠–≥–µ—Ä —Ç–∏—Ä–∫–µ–º–µ –∂–∞–±—ã–ª—ã–ø –∫–∞–ª—Å–∞:\n1. –¢–∏—Ä–∫–µ–º–µ–Ω–∏ –∂–∞“£—ã—Ä—Ç—ã“£—ã–∑.\n2. –ö—ç—à—Ç–∏ —Ç–∞–∑–∞–ª–∞“£—ã–∑.\n3. –¢–∏—Ä–∫–µ–º–µ–Ω–∏ –∫–∞–π—Ä–∞ –æ—Ä–Ω–æ—Ç—É“£—É–∑.",
        "es": "üí• La app falla:\n1. Actualiza la app.\n2. Limpia la cach√©.\n3. Reinstala la app.",
    }
}

# –ü–µ—Ä–µ–≤–æ–¥—ã —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–æ–∫
PROBLEM_BUTTONS = {
    "no_sound": {
        "ru": "üîá –ù–µ—Ç –∑–≤—É–∫–∞",
        "en": "üîá No Sound",
        "ky": "üîá “Æ–Ω –∂–æ–∫",
        "es": "üîá Sin sonido",
    },
    "no_connection": {
        "ru": "üì∂ –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è",
        "en": "üì∂ No Connection",
        "ky": "üì∂ –ë–∞–π–ª–∞–Ω—ã—à –∂–æ–∫",
        "es": "üì∂ Sin conexi√≥n",
    },
    "app_crash": {
        "ru": "üí• –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—ã–ª–µ—Ç–∞–µ—Ç",
        "en": "üí• App Crashes",
        "ky": "üí• –¢–∏—Ä–∫–µ–º–µ –∂–∞–±—ã–ª—É—É–¥–∞",
        "es": "üí• Falla la app",
    }
}

# –ü–µ—Ä–µ–≤–æ–¥—ã –∑–∞–≥–æ–ª–æ–≤–∫–∞
INSTRUCTION_TITLES = {
    "ru": "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å:",
    "en": "Choose the problem you are facing:",
    "ky": "–°–∏–∑–¥–∏ –∫—ã–∑—ã–∫—Ç—ã—Ä–≥–∞–Ω –º–∞—Å–µ–ª–µ–Ω–∏ —Ç–∞–Ω–¥–∞“£—ã–∑:",
    "es": "Selecciona el problema que tienes:",
}


@router.message(Command("instructions"))
async def show_problem_buttons(message: types.Message):
    lang = get_user_language(message.from_user.id)
    lang = lang if lang in ["ru", "en", "ky", "es"] else "ru"  # fallback

    # –°—Ç—Ä–æ–∏–º –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=PROBLEM_BUTTONS["no_sound"][lang], callback_data="no_sound")],
            [InlineKeyboardButton(text=PROBLEM_BUTTONS["no_connection"][lang], callback_data="no_connection")],
            [InlineKeyboardButton(text=PROBLEM_BUTTONS["app_crash"][lang], callback_data="app_crash")],
        ]
    )

    await message.answer(INSTRUCTION_TITLES[lang], reply_markup=keyboard)


@router.callback_query()
async def handle_problem_selection(callback: CallbackQuery):
    lang = get_user_language(callback.from_user.id)
    lang = lang if lang in ["ru", "en", "ky", "es"] else "ru"  # fallback

    instruction = PROBLEM_INSTRUCTIONS.get(callback.data, {}).get(lang)
    if instruction:
        await callback.message.edit_text(instruction)
    else:
        await callback.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
